== Общее описание системы ==

Система предназначена для глубокого морфологического анализа словоформ
(морфемного членения и поморфемной аннотации). Каждой проанализированной
морфеме приписывается двухуровневая аннотация: частеречные теги и 
стандартизованные глоссы (глоссы на языке-посреднике).

Система представляет собой «фабрику» морфологических анализаторов, 
основанных на словаре и правилах (точнее, структурных шаблонах словоформ). 
В шаблонах могут использоваться как строки, так и регулярные выражения
(расширенный диалект регулярных выражений, использующийся в языке
программирования Python).

=== Объектная модель ===

''Глосса'' ::
        <форма>:<частеречные_тэги>:<глосса> [<список_морфем>]

        <список_морфем> :: каждая морфема в этом списке также является
        глоссой, которая может содержать список морфем, и т.д.
        Список морфем может быть пустым.

    Пример:

    sì.ra:n:reste.du.souper, [sì:v:passer.la.nuit, ra:mrph:IPFV.INTR]

''Шаблон'' ::
        <глосса_отбора> | <глосса_маркировки>

        <глосса_отбора> :: глосса-шаблон, описывающая условия, необходимые
        для применения данного правила (шаблона) к словоформе. 

        <глосса_маркировки> :: глосса-шаблон, объединяемая с данными словоформы
        («помечающая» составляющие словоформы морфологической информацией)

        Шаблон позволяет расщеплять анализируемую словоформу или морфему
        на составляющие морфемы. Для этого используется специальная скобочная запись
        в поле <форма> соответствующей глоссы. 

        {<выражение>|<выражение>...}

        <выражение> :: строка или регулярное выражение (<re>...</re>), 
        характеризующие условия выделения морфемы внутри словоформы. 
        Список выражений может быть произвольной длины. 

        Пример: 

        {|ma}:: -> означает, что морфема, оканчивающаяся строкой 'ma', например
        'balama' будет разбита на две морфемы: bala:: ma:: 

        В глоссе маркировки каждой получившейся морфеме должна соответствовать 
        отдельная маркирующая морфема. 

    Пример:

    pattern :n: [ {|ma}:: ] | :n: [ :n: :mrph:COM]

    пример анализа по этому шаблону: 
    balama:: -> bala.ma:n: [ bala:n: ma:mrph:COM ]

=== Структура формальной грамматики ===

Формальная грамматика, используемая системой для построения морфологического
анализатора, представляет собой текстовый файл, содержащий списки шаблонов 
(морфологических правил), и директивы, описывающие порядок применения
шаблонов к словоформе. 

Система не накладывает никаких ограничений на группировку правил по разделам
и порядок их применения, пользователю предоставлена возможность задать
их самостоятельно. 

Разделы грамматики: 

Макроопределения: 

        macro <string> <replacement>

        Макроопределения просто заменяются соотвестствующей строкой
        во всем тексте грамматики, используются для повышения читабельности.

Порядок анализа: 
        
        plan
        for token:
        stage <id> <add|apply> [ <lookup> | <parallel|seqential> <parse> <section_name> ]
        return if parsed

Разделы правил: 
        
        section <name>
        pattern <pattern>

        Количество разделов не ограничено, их имена выбираются пользователем и затем
        используются при задании порядка анализа словоформы.


== Преимущества и недостатки ==

Преимущества: 

        + Гибкость: логика грамматического анализа (группировка и порядок применения правил)
        полностью определяется пользователем в файле грамматики, не «зашита» внутрь парсера,
        что позволяет приспособить систему к языкам разной структуры.

        + Использование регулярных выражений в шаблонах дает широкие возможности анализа словоформ
        и не требует изучения дополнительных инструментов.

        + Использование правил, основанных на шаблонах, позволяет описывать специализированные правила
        для любого количества продуктивных морфологических моделей, повышая точность распознавания.

Ограничения: 

        - Негибкость: в текущей реализации система не позволяет строить сложные условные цепочки
        из правил («если сработало это, то попробовать это, и если не сработает, то к результату
        применить вот то...»): правила применяются итеративно ко всему списку результатов анализа.

        - Регулярные грамматики, реализуемые регулярными выражениями, позволяют описывать хоть и многие,
        но не всякие контекстные условия, поэтому некоторые правила могут неоправданно усложняться или
        вовсе оказываются невозможными в рамках системы.

        - Использоване правил, основанных на шаблонах, меньше подходит для неспецифических моделей,
        в частности, словосложения, где критерии разбиения словоформы на морфемы не могут быть сформулированы
        в виде строковых ограничений на компоненты. Возможные компромиссные решения в таких случаях 
        требуют либо экстенсивного расширения списка правил (из-за необходимости явно перечислять 
        возможные точки разбиения), либо отказа от неспецифических моделей в пользу более специфических,
        что может приводить к снижению точности распознавания.


