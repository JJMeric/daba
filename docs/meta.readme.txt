== Редактор метаразметки ==

Редактор метаразметки: программа для добавления к текстовым документам
метаинформации, необходимой для помещения корпус, в стандартизованном
формате, пригодном для последующей машинной обработки и индексирования.
Исходными являются текстовые файлы (.txt), текст с метаразметкой
сохраняется в html-файлах.

=== Установка ===

==== Windows (NT, XP, etc.) ====

Перед использованием редактора на платформе Windows (NT, XP, etc.) необходимо установить:

1) язык программирования Python.

   Скачать инсталлятор по приведенной ниже ссылке и установить 
   с настройками по умолчанию.
        
   http://www.python.org/ftp/python/2.7/python-2.7.msi

2) Графическая библиотека wxWidgets с привязками для Python:

   Скачать инсталлятор по приведенной ниже ссылке и установить
   с настройками по умолчанию.

   http://downloads.sourceforge.net/wxpython/wxPython2.8-win32-unicode-2.8.11.0-py27.exe

3) собственно редактор метаразметки.

   Распаковать архив с программой в любом удобном месте.

=== Запуск ===

Каталог программы содержит следующие файлы: 

 meta.py        редактор метаразметки (запускаемый файл)
 meta.xml       конфигурация необходимых полей метаинформации:
                поля, их тип, стандартные списки значений и значания по умолчанию
                (текстовый файл в формате XML)
 README.txt     данная инструкция

Для запуска редактора достаточно дважды кликнуть на meta.py

=== Добавление метаразметки ===

Последовательность шагов для добавления метаразметки к текстовому файлу.

1. Открыть искомый текстовый файл:
        Выбрать меню File->Open
        Выбрать нужный файл, открыть.

        Файл открывается в левой половине окна в режиме "Только чтение"
        (чтобы редактирующий не мог по неосторожности повредить текст,
        т.к. редактор метаразметки не проверяет целостность файла)

        Примечание:
        Если колонка с открытым файлом слишком узкая, попробуйте развернуть
        окно на весь экран.

2. Последовательно заполнить все необходимые поля данных на всех закладках
   в правой панели окна. Если поле неприменимо к данному типу материала,
   оставить пустым либо значение по умолчанию.

   Примечание:
   В текущей реализации программа не умеет контролировать правильность и полноту
   введенных метаданных, поэтому вся ответственность за заполнение всех
   необходимых полей лежит на редактирующем. Не спешите! Хотя в любой момент редактирования
   можно вернуться к любому разделу метаданных и изменить выбранное значение,
   рекомендуется заполнять все поля последовательно.

3. Когда все необходимые поля заполнены, необходимо сохранить файл с включенными
   в него метаданными. Для этого:
        Выбрать меню File->Save As
        Выбрать имя файла с метаданными (при сохранении к имени файла будет 
        автоматически добавлено расширение .html).
        
        Примечание:
        В большинстве случаев рекомендуется не изменять имя файла предлагаемое
        по умолчанию, т.е. в диалоге "Сохранить как" нажимать "ОК", ничего не изменяя. 
        В этом случае файл с метаразметкой будет находиться в том же
        каталоге, что и исходный файл, иметь то же имя и отличаться
        только расширением. 

        Перед сохранением должно появиться всплывающее окно со списком полей
        метаданных и выбранных значений, которые будут добавлены в получившийся файл.
        (Предполагается, что данное окно поможет редактирующему
        еще раз проверить правильность и полноту заполнения полей. Если мешает — можно убрать).

4. Можно открывать следующий файл и повторять процедуру (см. п.1-3).
   
   Важно:
   Для перехода к следующему файлу ЗАКРЫВАТЬ уже открытый файл НЕ ТРЕБУЕТСЯ.

   Примечание:
   Если вы последовательно редактируете несколько файлов, можно пользоваться тем,
   что выбранные/заполненные при работе с предыдущим файлом значения метаданных
   НЕ ОБНУЛЯЮТСЯ при открытии следующего файла. Это может быть удобно при 
   последовательном сохранении файлов со значительным количеством общей метаинформации
   (например, текстов из одного источника или однотипных текстов). 
   При этом важно следить, чтобы в следующем тексте не осталось лишних данных,
   унаследованных от предшествующего документа.

